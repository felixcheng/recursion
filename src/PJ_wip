//convert the json object into an array, using comma as seperator
	var seg = json.split("")
	var ans;

	/*if (seg[0] === '"'){
		ans =  parsingString(seg);
	}*/

	//helper function to parse the array
	/*var parsing = function(seg){

		if (/\d/.test(seg[0])) {
			return parsingNum(seg);
		} else if (seg[0] === '"'){
			return parsingString(seg);
		} else {
			return parsingSpecial(seg);
		}

	if (seg[0] === '['){
			return parsingArr(seg);
		} else 	 if (seg[0] === '{'){
			return parsingObj(seg);
		} else */


		var parsingString = function(seg){
			seg = seg.slice(1, seg.length -1);
			return (seg.join(""));
		}

	/*	var parsingNum = function(seg){
			seg = seg.join("");
			seg = +seg;
			return seg;
		}

		var parsingSpecial = function(seg){
			switch(seg[0]){
				case t:
					return true;
				case f:
					return false;
				case u:
					return undefined;
				case n:
					return null;
			}
		}


		var parsingObj = function(seg){
			return 'hi'; 
		}


		var parsingArr = function(seg){
			return 'hi'; 
		}

	}*/

	
	return ans;

}


/*
		for (var i in seg){
			if ((seg[i][0]) === ' '){
				seg[i][0] = seg[i][0].slice(1, seg.length);
		} 

			if ((seg[i][0]) === '['){
				// put all the segs in the array into a variable, pass this variable into parsing (need to delete the '[' & ']'?)
				var segArr = [];
				var n = 0;
				var bracket = 0;
				var inArr = true;
				while (inArr) {
					if ((seg[i][0]) === '[' && bracket ==0) {
						seg[i][0] = seg[i][0].slice(1);
						bracket++;
					} else if ((seg[i][0]) === '['){
						bracket++;
					}

					if (seg[i+n][seg[i+n].length - 1] == ']' && bracket == 1) {

						seg[i+n][seg[i+n]] = seg[i+n][seg[i+n]].slice(0, seg[i+n][seg[i+n].length - 1].length - 1); 
						inArr = false;
					} else if (seg[i+n][seg[i+n].length - 1] == ']'){
						bracket--;
					}
					segArr.push(seg[i+n]);

					n++;
					
				}
				l2 = parsing(segArr);
				i = i + n - 1; //to adjust the index to prevent the seg being parsed again
			}	

		else if ((seg[i][0]) === '{'){
			l2 = {};
			var segArr = [];
			var n = 0;
			var bracket = 0;
			var inArr = true;
			while (inArr) {
				if ((seg[i][0]) === '{' && bracket ==0) {
					seg[i][0] = seg[i][0].slice(1);
					bracket++;
				} else if ((seg[i][0]) === '{'){
					bracket++;
				}

				if (seg[i+n][seg[i+n].length - 1] == '}' && bracket == 1) {
					seg[i+n][seg[i+n]] = seg[i+n][seg[i+n]].slice(0, seg[i+n][seg[i+n].length - 1].length - 1); 
					inArr = false;
				} else if (seg[i+n][seg[i+n].length - 1] == '}'){
					bracket--;
				}
				segArr.push(seg[i+n]);

				n++;
					
			}
			_.each(segArr, function(value){
				var ind = value.indexOf(':');
				var firstH = value.slice(0, ind);
				var secondH = value.slice(ind+1, value.length);
				l2[firstH] = parsing(secondH);
			})

		} 

		else if (/\d/.test(seg[i][0])){
			l2 = +seg[i][0];
		}

		else if ((seg[0]) === '"'){
			l2 = seg.slice(1, seg.length - 1);
		}

		else if ((seg[i][0]) === 't'){ l2 = true;}
		else if ((seg[i][0]) === 'f'){ l2 = false;}
		else if ((seg[i][0]) === 'n'){ l2 = null;}
		else if ((seg[i][0]) === 'u'){ l2 = undefined;}

		return l2;
	}}

parsing(seg);
return ans;

};



	// passing the array into the parsing func;
	/*if (tempL.length > 1){
		if ((tempL[0][0]) === '['){
			ans = [];
		} else if ((tempL[0][0]) === '{'){
			ans = {};
		}
		
		tempL[0]= tempL[0].slice(1);
		tempL[tempL.length - 1] = tempL[tempL.length - 1].slice(0, tempL[tempL.length - 1].length - 1);  //trim out the ']'/'}' for the last element 
		_.each(tempL, function(value){
			var ele = parsing(value);
			ans.push(ele);
		})

	} else {
	return l2};*/


	//////
	each = function(collection, iterator) {
    for (var e in collection) {
      iterator(collection[e], e, collection);
    };
  };


var arr = [11, '2', [3, 4]];
	
var str = JSON.stringify('hihi');
var num = JSON.stringify(789);
var spe = JSON.stringify(false);
arr = JSON.stringify(arr);

parseJSON(str);
parseJSON(num);
parseJSON(spe);
arr;
parseJSON(arr);

Question:
Throttle_.-- result;
Test cases of ParseJSON

